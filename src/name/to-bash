#!/usr/bin/env bash
source $(cli loader ---exports)
cli::import_group
cli::import cli-assert

help() {
    cat << EOF | cli::help::global
Command
    ${CLI_COMMAND}

Summary
    Converts a stream of cli names to bash names.

Description
    Converts a stream of cli names to bash names. Fails if any of the
    cli names do not match regex ${CLI_REGEX_NAME}.

Arguments
    --result -r             : Array to store command name. Default: RESULT.
EOF
    cat << EOF

Examples
    Convert '.foo-bar' 'baz' to '_foo_bar' 'baz'
        ${CLI_COMMAND} <<< $'.foo-bar\nbaz'

EOF
}

cli::meta::declare() {
    cli::meta::add_optional result 'RESULT'
}

::cli::name::to_bash::inline() {
    mapfile
    if (( ${#MAPFILE} == 0 )); then return; fi

    set ${MAPFILE[@]}
    while (( $# > 0 )); do
        if [[ ! "$1" =~ ${CLI_REGEX_NAME} ]]; then
            cli::fail "Unexpected cli name \"$1\"" \
                "found in \"${MAPFILE[@]}\"" \
                "does not match regex ${CLI_REGEX_NAME}."
        fi
        echo "${1//[-.]/_}"
        shift
    done
}

main() {
    declare -a RESULT=()

    mapfile -t
    inline "${MAPFILE[@]}"
    IFS=$'\n'; echo "${RESULT[*]}"; unset IFS
}

self_test() {
    ${CLI_COMMAND} <<< $'.foo-bar\nbaz' \
    | assert::pipe_eq \
        "_foo_bar" \
        "baz"

    assert::fails "${CLI_COMMAND} <<< $'foo_bar'"
}

cli::main "$@"
