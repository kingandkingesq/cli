#!/usr/bin/env bash
source $(cli loader)
cli::import cli table serialize
cli::import cli write
cli::import cli reflection get-type
cli::import cli_assert

help() {
    cat << EOF
Command
    ${CLI_COMMAND}
    
Summary
    Write a set of variables as tables to a set of files of the same name.

Description
    Each variable is serialized using 'serialize' to a file of the same.

Arguments
    --                      : The set of variables.

Debug Arguments
    --dir -d                : Directory in which to save the tables. Default is
                              present working directory.
    --source -s      [Flag] : Source stdin.

Global Arguments
    --help -h        [Flag] : Show this message and exit.
    --self-test      [Flag] : Runs a self test.
EOF
}

inline() {
    while (( $# > 0 )); do
        arg_name="$1" ::cli::table::serialize::inline > "$1"
        shift
    done
}

main() {
    if $arg_source; then
        source /dev/stdin
    fi

    if [[ -n "${arg_dir}" ]]; then
        mkdir -p "${arg_dir}"
    fi

    inline "$@"
}

self_test() {
    declare in_string='Hello world!'
    arg_name=in_string inline \
        | assert::pipe_eq_exact \
            'Hello\ world!'

    declare -a in_array=( 'Hello world' $'\ttabbed' $'  indented' '' )
    arg_name=in_array inline \
        | assert::pipe_eq_exact \
            'Hello\ world' \
            $'\\\ttabbed' \
            '\ \ indented' \
            ''

    declare -A in_map=( [my key]=$'\tmy tabbed value' )
    arg_name=in_map inline \
        | assert::pipe_eq_exact \
            $'my\ key \\\tmy\ tabbed\ value'
}

cli::load "$@"