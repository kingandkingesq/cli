#!/usr/bin/env bash
source $(cli loader)
cli::import_group

help() {
    cat << EOF | cli::help::global
Command
    ${CLI_COMMAND}

Description
    Like ngen, but for bash.

Arguments
    --print -p       [Flag] : Print the variable.
    --name -n     [Require] : The name of the variable.
                              Default: MY_META.
                              Regex: ${CLI_REGEX_GLOBAL_NAME}.
EOF
}

import() {
    cli::meta::add_flag 'print'
    cli::meta::add_required 'name' 'MY_META' "${CLI_REGEX_GLOBAL_NAME}"
}

swap() {
    awk "{ t = \$$1; \$$1 = \$$2; \$$2 = t; print }"
}

main() {
    local dir=$(mktemp -d "/tmp/cli.dsl.bgen.XXXXXX")
    local variable="${arg_name^^}"
    local -n ref=${variable}

    cli::declare "map_of cli_meta" "${variable}"

    cli::save "${dir}"

    cli::load "${dir}" \
        | swap 1 2 \
        | awk '$1 != "*"' \
        | cli::read "${variable}"

    if (( ${#ref[@]} == 0 )); then
        # no groups
        cli::load "${dir}" \
            | swap 1 2 \
            | cli::read "${variable}" 
    else
        # groups; merge universal metadata for 'with' group
        for group in "${!ref[@]}"; do
            cli::load "${dir}" \
                | swap 1 2 \
                | awk -v group="${group}" '$1 == "*" { $1 = group; print; }' \
                | cli::read "${variable}"
        done
    fi

    if ${arg_print}; then
        cli::print "${variable}" 
    else
        cli::write "${variable}"
    fi

    rm -r "${dir}"
}

self_test() {
    cli dsl sample -h \
        | cli dsl tokenize \
        | cli dsl parse \
        | cli dsl meta \
        | ${CLI_COMMAND} --print
}

cli::main "$@"