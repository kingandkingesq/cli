#!/usr/bin/env bash
source $(cli loader)
cli::import_group

help() {
    cat << EOF
Command
    ${CLI_COMMAND}

Description
    Like ngen, but for bash.

Arguments
    --print -p       [Flag] : Print the variables.

Global Arguments
    --help -h        [Flag] : Show this message and exit.
    --self-test      [Flag] : Runs a self test.
EOF
}

swap() {
    awk "{ t = \$$1; \$$1 = \$$2; \$$2 = t; print }"
}

main() {
    local dir=$(mktemp -d "/tmp/cli.dsl.bgen.XXXXXX")

    cli::define
    cli::define_field 'map' default 
    cli::define_field 'array' require 
    cli::define_field 'map_of map' allow 
    cli::define_field 'map' alias 
    cli::define_field 'map' implicit_value 
    cli::define_field 'map' regex 
    cli::define_field 'boolean' positional 

    cli::declare "map_of struct"

    cli::save "${dir}"

    cli::load "${dir}" \
        | swap 1 2 \
        | awk '$1 != "*"' \
        | cli::read

    if (( ${#STRUCT[@]} == 0 )); then
        # no groups
        cli::load "${dir}" \
            | swap 1 2 \
            | cli::read
    else
        # groups; merge universal metadata for with group
        for group in "${!STRUCT[@]}"; do
            cli::load "${dir}" \
                | swap 1 2 \
                | awk -v group=${group} '$1 == "*" { $1 = group; print; }' \
                | cli::read
        done
    fi

    if ${arg_print}; then
        cli::print
    else
        cli::write
    fi

    rm -r "${dir}"
}

self_test() {
    cli dsl sample -h \
        | cli dsl tokenize \
        | cli dsl parse \
        | cli dsl meta \
        | ${CLI_COMMAND} -p
}

cli::main "$@"