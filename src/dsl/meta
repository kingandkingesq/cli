#!/usr/bin/env bash
source $(cli loader)
cli::import_group

help() {
    cat << EOF
Command
    ${CLI_COMMAND}

Global Arguments
    --help -h        [Flag] : Show this message and exit.
    --self-test      [Flag] : Runs a self test.
EOF
}

main() {
    cli::define
    cli::define_field 'map_of map' default
    cli::define_field 'map_of array' require
    cli::define_field 'map_of map_of map' allow
    cli::define_field 'map_of map' alias
    cli::define_field 'map_of map' implicit_value
    cli::define_field 'map_of boolean' positional

    cli::declare

    local group
    local name

    # productions are sorted by group + key
    while read group key production production_name identifier; do

        # argument group
        if (( production == CLI_DSL_PRODUCTION_ARGUMENTS )); then
            name=
            group="${identifier}"

        # arguments
        elif (( production == CLI_DSL_PRODUCTION_NAME )); then
            name="${identifier}"
            cli::put STRUCT default "${group}" "${name}"

        # anyargs
        elif (( production == CLI_DSL_PRODUCTION_ANYARGS )); then
            cli::put STRUCT positional "${group}" true

        # alias
        elif (( production == CLI_DSL_PRODUCTION_ALIAS )); then
            cli::put STRUCT alias "${group}" "${identifier}" "${name}"

        # default
        elif (( production == CLI_DSL_PRODUCTION_DEFAULT )); then
            cli::put STRUCT default "${group}" "${name}" "${identifier}"

        # require
        elif (( production == CLI_DSL_PRODUCTION_REQUIRED )); then
            cli::put STRUCT require "${group}" "${name}"

        # flag
        elif (( production == CLI_DSL_PRODUCTION_FLAG )); then
            cli::put STRUCT default "${group}" "${name}" false
            cli::put STRUCT implicit_value "${group}" "${name}" true
            cli::put STRUCT allow "${group}" "${name}" true
            cli::put STRUCT allow "${group}" "${name}" false

        # allow
        elif (( production == CLI_DSL_PRODUCTION_ALLOWED_VALUE )); then
            cli::put STRUCT allow "${group}" "${name}" "${identifier}"
        fi
    done

    cli::write
}

self_test() (
    cli dsl sample -h \
        | cli dsl tokenize \
        | cli dsl parse \
        | cli dsl meta \
        | sort -k1 
        # \
        # | cli core save --dir /tmp/meta
)

cli::main "$@"