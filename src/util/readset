#!/usr/bin/env bash
source $(cli loader)
cli::import cli_assert

help() {
cat << EOF
Command
    ${CLI_COMMAND}
    
Summary
    Read stdin into an associative array.

Description
    Reads an even number of lines from a file to populate an associative
    array. Even lines are keys and odd lines are values. The associative
    array must be declared before calling readmap and passed as argument
    'name'. As such, this function can only be used inline. 

Arguments
    --name -n    [Required] : Name of associative shell variable.

Global Arguments
    --help -h        [Flag] : Show this message and exit.
    --self-test      [Flag] : Runs a self test.

Examples
    Source readset and load 'a' 'b' into 'set'.
        ${CLI_COMMAND} ---emit | source /dev/stdin; \\
        declare -A letters; \\
        arg_name=letters ::cli::util::readset::inline < <(printf '%s\n' 'a' 'b' ); \\
        declare -p letters
EOF
}

inline() {
    local key
    local value
    declare -n ref=${arg_name}

    while read -r key; do
        if [[ -z ${key} ]]; then
            continue
        fi
        ref+=( [$key]=true )
    done
}

main() {
    declare -A ${arg_name}
    inline "$@"
    declare -p ${arg_name}
}

self_test() {
    cat /dev/null \
    | ${CLI_COMMAND} --name set \
    | assert::pipe_eq \
        'declare -A set'

    printf '%s\n' a \
    | ${CLI_COMMAND} --name set \
    | assert::pipe_eq \
        'declare -A set=([a]="true" )'

    printf '%s\n' a b \
    | ${CLI_COMMAND} --name set \
    | assert::pipe_eq \
        'declare -A set=([b]="true" [a]="true" )'
}

cli::load "$@"