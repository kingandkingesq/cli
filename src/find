#!/usr/bin/env CLI_NAME=cli bash-cli

help() {
    cat << EOF | cli::help::global
Command
    ${CLI_COMMAND[@]}
    
Summary
    Find commands and groups of a cli.

Arguments
    --cli -c     [Required] : Name of cli.
    --traversal             : Specify the type of traversal. Allowed values:
                              pre, post. Default: pre.

Primary Arguments
    --type -t               : True if type of entry is of the specified type.
                              Allowed values: c, g.
    --name -n               : True if the last component of the path name being
                              examined matches the pattern.
    --ls             [Flag] : True. Prints out the type (either 'c' or 'g') 
                              followed by the entry.
EOF
    cat << EOF

Examples
    List commands and groups of 'cli' in post-order
        ${CLI_COMMAND[@]} --cli cli --ls --traversal post

    List groups of 'cli'
        ${CLI_COMMAND[@]} --cli cli --type g

    List emit commands of 'cli'
        ${CLI_COMMAND[@]} --cli "cli emit" --type c
EOF
}

find() {
    local node="$*"

    # post-order traversal
    if [[ ${ARG_TRAVERSAL} == 'post' ]]; then
        visit_children "${node}"
    fi

    visit 'g' "${node}"

    # pre-order traversal
    if [[ ${ARG_TRAVERSAL} == 'pre' ]]; then
        visit_children "${node}"
    fi
}

visit_children() {
    local node="$1"
    local type
    local name

    ${node} | while read type name; do {
        if [[ "${type}" == 'c' ]]; then
            visit 'c' "${node} ${name}"
        else
            find "${node}" "${name}"
        fi
    }
    done
}

visit() {
    local type=$1
    local path=$2
    local name=${path##* }

    if predicate "${type}" "${name}"; then
        
        # select type
        if ${ARG_LS}; then 
            echo -n "${type} "
        fi

        # select full command name
        echo ${path}
    fi
}

predicate() {
    local type=$1
    local name=$2

    # filter by type
    if [[ ! "${ARG_TYPE}" == '' ]]; then
        if [[ ! "${ARG_TYPE}" == "${type}" ]]; then 
            return 1
        fi
    fi

    # filter by name
    if [[ -n "${ARG_NAME}" ]]; then
        if [[ ! "${name}" == ${ARG_NAME} ]]; then 
            return 1
        fi
    fi
}

main() {
    find "${ARG_CLI}"
}
