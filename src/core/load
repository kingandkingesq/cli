#!/usr/bin/env CLI_NAME=cli bash-cli

help() {
cat << EOF | cli::help::global
Command
    ${CLI_COMMAND[@]}
    
Summary
    Read records from a set of files and write the records to stdout using 
    the file name as the first field followed by the fields of the record.

    If no files are specified, then all files in the directory are loaded.

Arguments
    --dir -d                : The directory to save files. Default is the
                              the present working directory.
    --                      : The file names. Wild cards accepted.
EOF
}

cli::meta::declare() {
    cli::meta::add_optional 'dir'
    cli::meta::allow_positional
}

::cli::core::load::inline() {
    : ${arg_dir:=$(pwd)}

    cli::assert "[[ -d \"${arg_dir}\" ]]"

    cd "${arg_dir}"

    if (( $# == 0 )); then
        set '*'
    fi

    for name in $@; do
        [[ "${name}" =~ "${CLI_REGEX_VARIABLE_NAME}" ]] || cli::assert 
    
        while IFS= read -r; do
            echo "${name}" "${REPLY}"
        done < "${name}"
    done
}

self_test() {
    local dir=$(mktemp -d "/tmp/cli.core.load.XXXXXX")

    cli core save --dir "${dir}" << EOF
        foo r00 r01 r02
        foo r10 r11 r12
        bar s00 s01 s\ 02
        baz z00
EOF

    ${CLI_COMMAND[@]} --dir "${dir}" -- foo bar \
        | sort \
        | assert::pipe_records_eq \
            'bar s00 s01 s\ 02' \
            'foo r00 r01 r02' \
            'foo r10 r11 r12'

    ${CLI_COMMAND[@]} --dir "${dir}" -- 'f*' \
        | sort \
        | assert::pipe_records_eq \
            'foo r00 r01 r02' \
            'foo r10 r11 r12'

    ${CLI_COMMAND[@]} --dir "${dir}" \
        | sort \
        | assert::pipe_records_eq \
            'bar s00 s01 s\ 02' \
            'baz z00' \
            'foo r00 r01 r02' \
            'foo r10 r11 r12'

    rm -r "${dir}"
}
