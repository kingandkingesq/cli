#!/usr/bin/env bash
source $(cli loader ---exports)
cli::import_group
cli::import cli-assert

help() {
    cat << EOF  | cli::core::variable::help
Command
    ${CLI_COMMAND}
    
Summary
    Initialize scaler values.

Description
    Variables initialize in accordance with their type as follows:
    
        string      ''
        boolean     false
        integer     0
        map         ()
        array       ()

    Indirect variables (e.g. map_of) are initialized same as maps.
EOF
}

cli::meta::declare() {
    cli::core::variable::import
}

main() {
    if ${arg_source}; then
        source /dev/stdin
    fi

    ARG_TYPE=${ARG_TYPE} \
    ARG_NAME=${ARG_NAME} \
        ::cli::core::variable::initialize::inline "$@"

    cli::dump "${ARG_NAME}"
}

::cli::core::variable::initialize::inline() {
    : ${ARG_TYPE?}
    : ${ARG_NAME?}

    local -n ref=${ARG_NAME}
    local -a type=( ${ARG_TYPE} )

    case ${type} in
        'string') ref="" ;;
        'integer') ref=0 ;;
        'boolean') ref=false ;;
        'array') ref=() ;;
        'map') ref=() ;;
        'map_of') ref=() ;;
    esac
}

self_test() {
    declare MY_STRING
    declare -p MY_STRING \
        | ${CLI_COMMAND} -s --type string --name MY_STRING \
        | assert::pipe_eq \
            "declare -- MY_STRING=\"\""

    declare MY_BOOLEAN
    declare -p MY_BOOLEAN \
        | ${CLI_COMMAND} -s --type boolean --name MY_BOOLEAN \
        | assert::pipe_eq \
            'declare -- MY_BOOLEAN="false"'

    declare -i MY_INTEGER
    declare -p MY_INTEGER \
        | ${CLI_COMMAND} -s --type integer --name MY_INTEGER \
        | assert::pipe_eq \
            'declare -i MY_INTEGER="0"'

    declare -a MY_ARRAY
    declare -p MY_ARRAY \
        | ${CLI_COMMAND} -s --type array --name MY_ARRAY \
        | assert::pipe_eq \
            'declare -a MY_ARRAY=()'

    declare -A MY_MAP
    declare -p MY_MAP \
        | ${CLI_COMMAND} -s --type map --name MY_MAP \
        | assert::pipe_eq \
            'declare -A MY_MAP=()'

    declare -A MY_MAP_OF_MAP
    declare -p MY_MAP_OF_MAP \
        | ${CLI_COMMAND} -s --type 'map_of map' --name MY_MAP_OF_MAP \
        | assert::pipe_eq \
            'declare -A MY_MAP_OF_MAP=()'
}

cli::main "$@"
