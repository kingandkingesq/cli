#!/usr/bin/env CLI_NAME=cli bash-cli
cli::import_inline cli subshell dump
cli::import_inline cli bash stack trace

help() {
    cat << EOF | cli::help::global
Command
    ${CLI_COMMAND[@]}
    
Summary
    Dump a stacktrace after an error trap fires.
EOF
}

cli::meta::declare() {
    cli::meta::allow_positional
}

main() {
    ::cli::subshell::trap::err::inline "$@"
}

::cli::subshell::trap::err::inline() {
    local -a CLI_PIPESTATUS=( "${PIPESTATUS[@]}" )
    local CLI_TRAP_EXIT_CODE=${1-'?'}

    # only dump if we are exiting after the trap; e.g. errexit is set (set -e)
    #   -e  Exit immediately if a command exits with a non-zero status.
    if ! [[ $- =~ e ]]; then
        return
    fi

    {
        echo -n "TRAP ERR: exit=${CLI_TRAP_EXIT_CODE}"
        if (( ${#CLI_PIPESTATUS[@]} > 1 )); then
            echo -n ", pipe=[$(cli::join ',' "${CLI_PIPESTATUS[@]}")]"
        fi
        echo ", bpid=${BASHPID[*]}, pid=$$"

        ::cli::bash::stack::trace::inline | sed 's/^/  /'
    } | ::cli::subshell::dump::inline
}

self_test() {
    cli::source cli-assert
}
