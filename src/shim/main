#!/usr/bin/env CLI_NAME=cli bash-cli
cli::import cli shim which

help() {
    cat << EOF | cli::help::global
Command
    ${CLI_COMMAND[@]}
    
Summary
    ...
EOF
}

::cli::shim::main::inline() {

    # CLI_NAME
    local CLI_NAME="${FUNCNAME[1]}"
    [[ "${CLI_NAME}" =~ ${CLI_REGEX_NAME} ]] \
        || cli::assert "Shim '${CLI_NAME}' does not match regex '${CLI_REGEX_NAME}'."

    # CLI_COMMAND
    local -a CLI_COMMAND=( "${CLI_NAME}" )
    while [[ "${1-}" =~ ${CLI_REGEX_NAME} ]]; do
        CLI_COMMAND+=( "$1" )
        shift
    done

    # BASH_ARGV0
    ::cli::shim::which::inline "${CLI_COMMAND[@]}" \
        || cli::assert "Failed to find shim for '${CLI_COMMAND[@]}'."
    BASH_ARGV0="${REPLY}"

    [[ -f "$0" ]] \
        || cli::assert "Source file '$0' for command '${CLI_COMMAND[@]}' does not exist."

    [[ -x "$0" ]] \
        || cli::assert "Source file '$0' for command '${CLI_COMMAND[@]}' is not executable."

    cli::loader::main "$@"
}

self_test() {
    cli::temp::dir
    local DIR="${REPLY}"
    local FOO_SRC_DIR="${DIR}/src"
    local FOO_BAR="${DIR}/src/bar"
    
    # emit foo shim
    declare -rg CLI_SHIM_ROOT_DIR_FOO="${FOO_SRC_DIR}"
    foo() { ::cli::shim::main::inline "$@"; }

    # shim /src
    mkdir "${FOO_SRC_DIR}"

    # emit bar command
    cat <<-EOF > "${FOO_BAR}"
		::foo::bar::inline() { echo "\$@"; }
		EOF
    chmod a+x "${FOO_BAR}"

    # foo
    diff <(foo bar --- a0 a1 a2) - <<< 'a0 a1 a2' || cli::assert
}
