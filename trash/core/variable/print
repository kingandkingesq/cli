#!/usr/bin/env CLI_NAME=cli bash-cli-part
cli::source cli core type is-scaler
cli::source cli core type is-modified
cli::source cli bash string literal
cli::source cli bash array literal
cli::source cli bash map literal

help() {
    cat << EOF
Command
    ${CLI_COMMAND[@]}
    
Summary
    Print variables in a scope.
EOF
}

cli::core::variable::print() {
    local -n SCOPE_REF="${ARG_SCOPE}"

    set "${!SCOPE_REF[@]}"
    while (( $# > 0 )); do
        local NAME="$1"
        shift

        local -a TYPE=( ${SCOPE_REF[$NAME]} )

        echo -n "cli::declare ${TYPE[@]} ${NAME}"
        if cli::core::type::is_scaler "${TYPE[@]}"; then
            cli::bash::string::literal "${!NAME}"
            echo -n "=${REPLY}"

        elif [[ "${TYPE}" == 'array' ]]; then
            local -n ARRAY_REF="${NAME}"
            cli::bash::array::literal "${ARRAY_REF[@]}"
            echo -n "=${REPLY}"

        elif [[ "${TYPE}" == 'map' ]] || \
            cli::core::type::is_modified ${TYPE[@]} ; then
            local -n MAP_REF="${NAME}"
            ARG_MAP="${NAME}" \
                cli::bash::map::literal "${!MAP_REF[@]}"
            echo -n "=${REPLY}"
        fi

        echo
    done
}

self_test() {
    readonly MY_STRING='Hello world!'
    readonly MY_BELL=$'\a'
    readonly MY_INTEGER=42
    readonly MY_BOOLEAN=true
    readonly MY_ARRAY=( a b c )
    readonly -A MY_MAP=( ['k']='v' )
    readonly -A MY_MAP_OF_STRING=(['k e y']=0)
    readonly -A MY_MAP_OF_STRING_0='value'

    local -A SCOPE=(
        ['MY_STRING']='string'
        ['MY_BELL']='string'
        ['MY_INTEGER']='integer'
        ['MY_BOOLEAN']='boolean'
        ['MY_ARRAY']='array'
        ['MY_MAP']='map'
        ['MY_MAP_OF_STRING']='map_of string'
        ['MY_MAP_OF_STRING_0']='string'
    )

ARG_SCOPE=SCOPE ${CLI_COMMAND[@]} --

    # diff <(ARG_SCOPE=SCOPE ${CLI_COMMAND[@]} --) <(
    #     echo "cli::declare string MY_BELL=\$'\a'"
    #     echo "cli::declare string MY_MAP_OF_STRING_0=\"value\""
    #     echo "cli::declare map_of string MY_MAP_OF_STRING==([\"k e y\"]=\"0\" )"
    #     echo "cli::declare boolean MY_BOOLEAN=\"true\""
    #     echo "cli::declare map MY_MAP==([k]=\"v\" )"
    #     echo "cli::declare string MY_STRING=\"Hello world!\""
    #     echo "cli::declare array MY_ARRAY==([0]=\"a\" [1]=\"b\" [2]=\"c\")"
    #     echo "cli::declare integer MY_INTEGER=\"42\""
    # )
}
