#!/usr/bin/env CLI_NAME=cli bash-cli-part
cli::source cli core type get

help() {
    cat << EOF | cli::core::type::help
Command
    ${CLI_COMMAND[@]}
    
Summary
    Set REPLY to a type given the predicates REPLY_CLI_CORE_TYPE_\*.
EOF
}

cli::core::type::print::inline() {
    local -a TYPE=()

    # modified
    if ${REPLY_CLI_CORE_TYPE_IS_MODIFIED}; then
        ! ${REPLY_CLI_CORE_TYPE_IS_STRING} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_BOOLEAN} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_INTEGER} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_MAP} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_ARRAY} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_SCALER} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_BUILTIN} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_USER_DEFINED} || cli::assert
        [[ ! "${REPLY_CLI_CORE_TYPE_USER_DEFINED_TYPE}" ]] || cli::assert
       
        REPLY="m${REPLY_CLI_CORE_TYPE_ELEMENT_TYPE[@]}"
        return
    fi

    # indexable
    if ${REPLY_CLI_CORE_TYPE_IS_ARRAY}; then
        ! ${REPLY_CLI_CORE_TYPE_IS_SCALER} || cli::assert
        ${REPLY_CLI_CORE_TYPE_IS_BUILTIN} || cli::assert
        TYPE+=( a )
    fi
    if ${REPLY_CLI_CORE_TYPE_IS_MAP}; then
        ! ${REPLY_CLI_CORE_TYPE_IS_SCALER} || cli::assert
        ${REPLY_CLI_CORE_TYPE_IS_BUILTIN} || cli::assert
        TYPE+=( A )
    fi

    TYPE+=( "${REPLY_CLI_CORE_TYPE_ELEMENT_TYPE[@]}" )

    # scaler
    if ${REPLY_CLI_CORE_TYPE_IS_STRING}; then
        ${REPLY_CLI_CORE_TYPE_IS_SCALER} || cli::assert
        ${REPLY_CLI_CORE_TYPE_IS_BUILTIN} || cli::assert
        (( ${#REPLY_CLI_CORE_TYPE_ELEMENT_TYPE[@]} == 0 )) || cli::assert
        (( ${#TYPE[@]} == 0 )) || cli::assert
    fi
    if ${REPLY_CLI_CORE_TYPE_IS_INTEGER}; then
        ${REPLY_CLI_CORE_TYPE_IS_SCALER} || cli::assert
        ${REPLY_CLI_CORE_TYPE_IS_BUILTIN} || cli::assert
        (( ${#REPLY_CLI_CORE_TYPE_ELEMENT_TYPE[@]} == 0 )) || cli::assert
        TYPE+=( i )
    fi
    if ${REPLY_CLI_CORE_TYPE_IS_BOOLEAN}; then
        ${REPLY_CLI_CORE_TYPE_IS_SCALER} || cli::assert
        ${REPLY_CLI_CORE_TYPE_IS_BUILTIN} || cli::assert
        (( ${#REPLY_CLI_CORE_TYPE_ELEMENT_TYPE[@]} == 0 )) || cli::assert
        TYPE+=( b )
    fi

    # udt
    if ${REPLY_CLI_CORE_TYPE_IS_USER_DEFINED}; then
        ! ${REPLY_CLI_CORE_TYPE_IS_SCALER} || cli::assert
        ! ${REPLY_CLI_CORE_TYPE_IS_BUILTIN} || cli::assert
        TYPE+=( u )
    fi

    # readonly
    if ${REPLY_CLI_CORE_TYPE_IS_READ_ONLY}; then
        TYPE+=( r )
    fi

    # udt name
    if ${REPLY_CLI_CORE_TYPE_IS_USER_DEFINED}; then
        [[ "${REPLY_CLI_CORE_TYPE_USER_DEFINED_TYPE}" ]] || cli::assert
        TYPE+=( ' ' "${REPLY_CLI_CORE_TYPE_USER_DEFINED_TYPE}" )
    fi

    IFS=
    REPLY=${TYPE[*]}
    IFS="${CLI_IFS}"
}

self_test() {
    cli::core::type::get::inline '' foo
    exit

    test() {
        diff <(cli::core::type::get::inline "$@"; ${CLI_COMMAND[@]} ---reply) <( echo "$@" )
    }
    test
    test i
    test b
    test a
    test A
    test ai
    test Ai
    test ab
    test Ab
    test r
    test ir
    test br
    test ar
    test Ar
    test air
    test Air
    test abr
    test Abr
    test u udt
    test ur udt

    test m
    test mi
    test mb
    test ma
    test mA
    test mai
    test mAi
    test mab
    test mAb
    test mr
    test mir
    test mbr
    test mar
    test mAr
    test mair
    test mAir
    test mabr
    test mAbr
    test mu udt
    test mur udt

    test mm
    test mmur udt
}
