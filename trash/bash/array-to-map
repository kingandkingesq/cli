#!/usr/bin/env CLI_NAME=cli bash-cli

help() {
    cat << EOF | cli::help::global
Command
    ${CLI_COMMAND[@]}
    
Summary
    Converts an array into a map.

Description
    Given the name of a soure array and a target map, for each element in
    the array of the form "key=value", add a key/value pair to the map.

Arguments
    --                      : name of then array, name of the map.

Examples
    declare -A my_map=( [a]=0 [b]=1 ); \\
        declare -p my_map | ${CLI_COMMAND[@]} -- my_map my_array
EOF
}

cli::meta::declare() {
    cli::meta::allow_positional
}

main() {
    : ${1:?'Missing array name.'}
    : ${2:?'Missing map name.'}

    source /dev/stdin
    declare -Ag $2
    ::cli::bash::array_to_map::inline $1 $2
    declare -p $2
}

::cli::bash::array_to_map::inline() {
    declare -n ARRAY_REF=$1
    declare -n MAP_REF=$2

    for pair in "${ARRAY_REF[@]}"; do
        MAP_REF[${pair%%=*}]="${pair#*=}"
    done
}

self_test() {
    declare -a array=( "a=0" "b=1" )

    declare -p array | ${CLI_COMMAND[@]} -- array map \
    | assert::pipe_eq_exact \
        "declare -A map=([b]=\"1\" [a]=\"0\" )"
}
